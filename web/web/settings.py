"""
Django settings for web project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# ====== 配置加载重构 ======
# 安全配置文件路径 (已修复路径)
secrets_path = BASE_DIR.parent / "secure/secrets.env"  # 使用 parent 上一级目录

# 1. 优化配置加载逻辑
SECRET_KEY = None
EMAIL_HOST_PASSWORD = None

try:
    # 尝试加载配置文件
    if secrets_path.exists():
        secrets = {}
        with open(secrets_path, 'r') as f:
            for line in f:
                line = line.strip()
                if line and '=' in line and not line.startswith('#'):
                    key, value = line.split('=', 1)
                    secrets[key.strip()] = value.strip().strip("'\"")
                    
        SECRET_KEY = secrets.get('SECRET_KEY')
        EMAIL_HOST_PASSWORD = secrets.get('EMAIL_HOST_PASSWORD')
    
    # 生成后备密钥
    if not SECRET_KEY:
        SECRET_KEY = get_random_secret_key()
        
    if not EMAIL_HOST_PASSWORD:
        EMAIL_HOST_PASSWORD = '临时邮箱密码'
        
except Exception as e:
    print(f"⚠️ 配置文件读取错误: {str(e)}")
    SECRET_KEY = get_random_secret_key()
    EMAIL_HOST_PASSWORD = '临时邮箱密码'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '60.205.128.19', 'qjlg-videos.cn', 'www.qjlg-videos.cn']  # 添加服务器IP


# Application definition - 已删除 django_extensions 引用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'list.apps.ListConfig'  # 确保这是您的应用名称
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'list.middleware.VoteProtectionMiddleware',
]

ROOT_URLCONF = 'web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'project', 
        'USER': 'mysql', 
        'PASSWORD': 'Mysql123.',  
        'HOST': 'localhost',  
        'PORT': '3306', 
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')    # 生产环境收集目录

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 安全加固设置
SECURE_SSL_REDIRECT = True  # 重定向HTTP到HTTPS
SESSION_COOKIE_SECURE = True  # 仅通过HTTPS传输会话cookie
CSRF_COOKIE_SECURE = True  # 仅通过HTTPS传输CSRF cookie
X_FRAME_OPTIONS = 'DENY'  # 防止点击劫持
SECURE_BROWSER_XSS_FILTER = True  # 启用浏览器XSS过滤
SECURE_CONTENT_TYPE_NOSNIFF = True  # 防止MIME类型嗅探
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# 设置默认字符集为UTF-8，解决邮件发送时的编码问题
DEFAULT_CHARSET = 'utf-8'


# 配置缓存 - 使用Redis
# 注意：生产环境需要安装redis包 (pip install redis)
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
    }
}

SECURITY_SETTINGS = {
    'MAX_VOTES_PER_DAY': 3,  # 每人每天3票
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = '2543540565@qq.com' 
EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD  # 使用上方加载的密码

# 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'error.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'list': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}